{"ast":null,"code":"var _jsxFileName = \"/Users/aprillexi/Desktop/multimodal/24-25/processor-tree/src/components/ProcessorTree.js\";\nimport React from \"react\";\nimport TreeView from \"react-treeview\";\nimport \"react-treeview/react-treeview.css\"; // Import the CSS for react-treeview\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProcessorTree = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((processor, i) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: processor\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ProcessorTree;\nconst TreeNode = ({\n  node\n}) => {\n  const hasChildren = node.children && node.children.length > 0;\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    nodeLabel: node.name,\n    defaultCollapsed: false,\n    children: hasChildren && node.children.map((child, i) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: child\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeNode;\nexport default ProcessorTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProcessorTree\");\n$RefreshReg$(_c2, \"TreeNode\");","map":{"version":3,"names":["React","TreeView","jsxDEV","_jsxDEV","ProcessorTree","data","children","map","processor","i","TreeNode","node","fileName","_jsxFileName","lineNumber","columnNumber","_c","hasChildren","length","nodeLabel","name","defaultCollapsed","child","_c2","$RefreshReg$"],"sources":["/Users/aprillexi/Desktop/multimodal/24-25/processor-tree/src/components/ProcessorTree.js"],"sourcesContent":["import React from \"react\";\nimport TreeView from \"react-treeview\";\nimport \"react-treeview/react-treeview.css\"; // Import the CSS for react-treeview\n\nconst ProcessorTree = ({ data }) => {\n  return (\n    <div>\n      {data.map((processor, i) => (\n        <TreeNode key={i} node={processor} />\n      ))}\n    </div>\n  );\n};\n\nconst TreeNode = ({ node }) => {\n  const hasChildren = node.children && node.children.length > 0;\n  return (\n    <TreeView nodeLabel={node.name} defaultCollapsed={false}>\n      {hasChildren &&\n        node.children.map((child, i) => <TreeNode key={i} node={child} />)}\n    </TreeView>\n  );\n};\n\nexport default ProcessorTree;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,mCAAmC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,oBACEF,OAAA;IAAAG,QAAA,EACGD,IAAI,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEC,CAAC,kBACrBN,OAAA,CAACO,QAAQ;MAASC,IAAI,EAAEH;IAAU,GAAnBC,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GARIZ,aAAa;AAUnB,MAAMM,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAMM,WAAW,GAAGN,IAAI,CAACL,QAAQ,IAAIK,IAAI,CAACL,QAAQ,CAACY,MAAM,GAAG,CAAC;EAC7D,oBACEf,OAAA,CAACF,QAAQ;IAACkB,SAAS,EAAER,IAAI,CAACS,IAAK;IAACC,gBAAgB,EAAE,KAAM;IAAAf,QAAA,EACrDW,WAAW,IACVN,IAAI,CAACL,QAAQ,CAACC,GAAG,CAAC,CAACe,KAAK,EAAEb,CAAC,kBAAKN,OAAA,CAACO,QAAQ;MAASC,IAAI,EAAEW;IAAM,GAAfb,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEf,CAAC;AAACQ,GAAA,GARIb,QAAQ;AAUd,eAAeN,aAAa;AAAC,IAAAY,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}